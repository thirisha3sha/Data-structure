// to find in,post,pre order in binary search tree

#include <stdio.h>
#include <stdlib.h>
typedef struct TreeNode
 {
    int data;
    struct TreeNode *left;
    struct TreeNode *right;
} TreeNode;
TreeNode* newNode(int data) {
    TreeNode* node = (TreeNode*)malloc(sizeof(TreeNode));
    node->data = data;
    node->left = NULL;
    node->right = NULL;
    return node;
}
void preorder(TreeNode* root) 
{
    if (root != NULL) 
	{
        printf("%d ", root->data);
        preorder(root->left);
        preorder(root->right);
    }
}
void inorder(TreeNode* root) {
    if (root != NULL) {
        inorder(root->left);
        printf("%d ", root->data);
        inorder(root->right);
    }
}
void postorder(TreeNode* root) 
{
    if (root != NULL) 
	{
        postorder(root->left);
        postorder(root->right);
        printf("%d ", root->data);
    }
}

int main()
 {
    
    TreeNode* root = newNode(1);
    root->left = newNode(2);
    root->right = newNode(3);
    root->left->left = newNode(4);
    root->left->right = newNode(5);
	printf("\nPreorder traversal: ");
    preorder(root);
	printf("\nInorder traversal: ");
    inorder(root);
	printf("\nPostorder traversal: ");
    postorder(root);
    return 0;
}
