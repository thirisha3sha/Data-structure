//array opertions
#include<stdio.h>
#include<stdlib.h>
#define MAX 10
void create();
void insert();
void deletion();
void search();
void display();
int b[MAX], n, p, e, f, i, pos;
int main() 
{
    int ch;
    char g = 'y';

    do 
	{
        printf("\nMain Menu");
        printf("\n1. Create\n2. Delete\n3. Search\n4. Insert\n5. Display\n6. Exit\n");
        printf("\nEnter your Choice: ");
        scanf("%d", &ch);

        switch(ch) 
		{
            case 1:
                create();
                break;
            case 2:
                deletion();
                break;
            case 3:
                search();
                break;
            case 4:
                insert();
                break;
            case 5:
                display();
                break;
            case 6:
                exit(0);
                break;
            default:
                printf("\nEnter the correct choice: ");
        }
        printf("\nDo you want to continue (y/n): ");
        scanf("\n%c", &g);
    } while(g == 'y' || g == 'Y');

    return 0;
}
void create()
{
    printf("\nEnter the number of elements: ");
    scanf("%d", &n);
    for(i = 0; i < n; i++) 
	{
        printf("\nEnter Element %d: ", (i + 1));
        scanf("%d", &b[i]);
    }
}
void deletion() 
{
    printf("\nEnter the position to delete: ");
    scanf("%d", &pos);
	if(pos >= n) 
	{
        printf("\nInvalid Location");
    }
    else 
	{
        for(i = pos - 1; i < n - 1; i++)
		 {
            b[i] = b[i + 1];
        }
        n--;
    }
	printf("\nThe Elements after deletion: ");
    display();
}
void search() 
{
    printf("\nEnter the Element to be searched: ");
    scanf("%d", &e);
    int pos, flag = 0;
    for(i = 0; i < n; i++) 
	{
        if(b[i] == e) 
		{
            flag = 1;
            pos = i;
            break;
        }
    }
    if(flag == 1) 
	{
        printf("\nValue is at position: %d", pos + 1);
    }
    else 
	{
        printf("\nValue not found in the list");
    }
}
void insert() 
{
    printf("\nEnter the position to insert: ");
    scanf("%d", &pos);
	if(pos >= n) 
	{
        printf("\nInvalid Location");
    }
    else 
	{
        printf("\nEnter the element to insert: ");
        scanf("%d", &p);
		for(i = n - 1; i >= pos; i--)
		{
            b[i + 1] = b[i];
        }
        b[pos] = p;
        n++;
    }
    printf("\nThe list after insertion: ");
    display();
}
void display() 
{
    printf("\nThe Elements of The list ADT are:\n");
    for(i = 0; i < n; i++) 
	{
        printf("%d\t", b[i]);
    }
    printf("\n");
}
