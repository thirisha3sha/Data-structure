/*Given the head of a singly linked list, return true if it is a palindrome or false
otherwise.
Example 1:
Input: head = [1,2,2,1]
Output: true
Example 2:
Input: head = [1,2]
Output: false
Input: R->A->D->A->R->NULL
Output: Yes
Input: C->O->D->E->NULL
Output: No
Output: "bbAa",starting index 0,2 */
#include <stdio.h>
#include <stdlib.h>
int isPalindrome(char* str, int length)
 {
    int i = 0, j = length - 1;
    while (i < j)
	 {
        if (str[i] != str[j]) 
		{
            return 0;
        }
        i++;
        j--;
    }
    return 1;
}
int main() {
    char arr[100]; 
    int length;
	printf("Enter the characters (separated by spaces, end with 'x'):\n");
	char ch;
    int index = 0;
    while (1) {
        scanf(" %c", &ch);
        if (ch == 'x') 
		{
            arr[index] = '\0';
            break;
        }
        arr[index++] = ch;
    }
	length = index;
	printf("Output: \"%s\", starting index 0,%d\n", arr, length - 2);
	printf("Output: %s\n", isPalindrome(arr, length) ? "Yes" : "No");
	return 0;
}
