/*Given two strings needle and haystack, return the index of the first occurrence of
needle in haystack, or -1 if needle is not part of haystack.
Example 1:
Input: haystack = "sadbutsad", needle = "sad"
Output: 0
Explanation: "sad" occurs at index 0 and 6.
The first occurrence is at index 0, so we return 0.
Input: haystack = "leetcode", needle = "leeto"
Output: -1
Explanation: "leeto" did not occur in "leetcode", so we return -1 */
#include <stdio.h>
#include <string.h>

int strStr(char *haystack, char *needle) {
    int haystack_len = strlen(haystack);
    int needle_len = strlen(needle);

    if (needle_len == 0) {
        return 0; // An empty needle is always present at index 0
    }

    if (haystack_len < needle_len) {
        return -1; // If haystack is shorter than needle, needle cannot be in haystack
    }

    for (int i = 0; i <= haystack_len - needle_len; i++) {
        int j;
        for (j = 0; j < needle_len; j++) {
            if (haystack[i + j] != needle[j]) {
                break; // If characters don't match, break the inner loop
            }
        }
        if (j == needle_len) {
            return i; // If needle is found, return the starting index
        }
    }
    return -1; // If needle is not found in haystack
}

int main() {
    char haystack[] = "sadbutsad";
    char needle[] = "sad";
    
    int index = strStr(haystack, needle);
    if (index != -1) {
        printf("The first occurrence of '%s' in '%s' is at index %d.\n", needle, haystack, index);
    } else {
        printf("'%s' is not found in '%s'.\n", needle, haystack);
    }

    char haystack2[] = "leetcode";
    char needle2[] = "leeto";

    int index2 = strStr(haystack2, needle2);
    if (index2 != -1) {
        printf("The first occurrence of '%s' in '%s' is at index %d.\n", needle2, haystack2, index2);
    } else {
        printf("'%s' is not found in '%s'.\n", needle2, haystack2);
    }

    return 0;
}


